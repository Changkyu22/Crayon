<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="memberMapper">
  
		<select id="selectKakao" parameterType="MemberVO" resultType="MemberVO">
			select * from member where email = #{email}			
		</select>  
  		
  		<insert id="memberKakao" parameterType="MemberVO">
  			insert into member values(#{email},'',#{name},'',1,0,seq_member.nextval)
  		</insert>
  		
  		<insert id="memberJoin" parameterType="MemberVO">
  			insert into member values(#{email},#{pw},#{name},#{birth},0,0,seq_member.nextval)
  		</insert>
  		
  		<select id="memberLogin" parameterType="MemberVO" resultType="MemberVO">
  			select * from member where email=#{email} and pw=#{pw} 
  		</select>
  		
  		<update id="memberUpdate" parameterType="MemberVO">
  		update member set pw=#{pw}, name=#{name} where email=#{email}
  		</update>
  		
  		<delete id="memberDelete" parameterType="MemberVO">
  			delete member where email=#{email}
  		</delete>
  		
  		<delete id="memberAdminDelete" parameterType="MemberVO">
  			delete member where mnum=#{mnum}
  		</delete>
  		
  		<select id="memberIdCheck" parameterType="MemberVO" resultType="MemberVO">
  			select * from member where email=#{email}
  		</select>
  		
  		
  		<select id="memberSearchID" parameterType="MemberVO" resultType="MemberVO">
  			select email from member where name=#{name} and birth=#{birth}
  		</select>

		<select id="memberSearchPW" parameterType="MemberVO" resultType="MemberVO">
			select pw from member where email=#{email} and birth=#{birth}
		</select>
		
		<sql id="searching">
	    	<choose>
				<when test="kind == 'ke'">
					where email like '%'||#{search}||'%'
				</when>
				<when test="kind == 'kn'">
					where name like '%'||#{search}||'%'
				</when>
				<otherwise>
					where kCheck like '%'||#{search}||'%'
				</otherwise>
			</choose>
	    </sql>
		
		<select id="memberList" parameterType="Pager" resultType="MemberVO">
			select * from 
  				(select M.*, rownum MN from
		  			(select * from member
		  			<include refid="searching"></include> 
		  			order by mnum desc) M)
		  	where MN between #{startRow} and #{lastRow}
		</select>
		
		<select id="memberCount" resultType="Integer" parameterType="Pager">
  			select count(mnum) from member
  			<include refid="searching"></include>
  		</select> 
		
			
	<!--관리자 추가-->
	
	<insert id="touradd" parameterType="TourCalendarVO">
		insert into tour values (tour_seq.nextval,#{tourNum},#{tourName},#{maxNum},#{price},0)
	</insert>
	
	<!--관리자 삭제-->

	<delete id="tourDelete" parameterType="TourCalendarVO">
		delete tour where tourNum=#{tourNum}	
	</delete>		
		
  </mapper>